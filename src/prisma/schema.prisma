// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  password      String
  email         String         @unique
  role          String         @default("USER")
  avatar        String?
  basket        Basket?
  favoritesList FavoritesList?
  ratings       Rating[]
}

model Basket {
  id            Int            @id @default(autoincrement())
  user          User           @relation(fields: [userId], references: [id])
  userId        Int            @unique
  basketDevices BasketDevice[]
}

model FavoritesList {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int              @unique
  favoriteDevices FavoriteDevice[]
}

model Device {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String
  price          Int
  viewsCount     Int              @default(0)
  ratings        Rating[]
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     Int
  brand          Brand            @relation(fields: [brandId], references: [id])
  brandId        Int
  deviceInfo     DeviceInfo[]
  deviceImages   DeviceImage[]
  favoriteDevice FavoriteDevice[]
  basketDevice   BasketDevice[]
}

model Rating {
  id       Int    @id @default(autoincrement())
  rate     Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId Int
}

model BasketDevice {
  id       Int    @id @default(autoincrement())
  count    Int    @default(1)
  basket   Basket @relation(fields: [basketId], references: [id])
  basketId Int
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId Int
}

model FavoriteDevice {
  id              Int           @id @default(autoincrement())
  favoritesList   FavoritesList @relation(fields: [favoritesListId], references: [id])
  favoritesListId Int
  device          Device        @relation(fields: [deviceId], references: [id])
  deviceId        Int
}

model Category {
  id         Int             @id @default(autoincrement())
  name       String          @unique
  devices    Device[]
  categories CategoryBrand[]
}

model Brand {
  id      Int             @id @default(autoincrement())
  name    String          @unique
  devices Device[]
  brands  CategoryBrand[]
}

model CategoryBrand {
  id         Int      @id @default(autoincrement())
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  brand      Brand    @relation(fields: [brandId], references: [id])
  brandId    Int
}

model DeviceInfo {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  device      Device @relation(fields: [deviceId], references: [id])
  deviceId    Int
}

model DeviceImage {
  id       Int    @id @default(autoincrement())
  image    String
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId Int
}
